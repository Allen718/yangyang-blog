(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{381:function(n,t,e){"use strict";e.r(t);var o=e(42),s=Object(o.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"创建button-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建button-组件"}},[n._v("#")]),n._v(" 创建Button 组件")]),n._v(" "),e("p",[n._v("创建一个button按钮，先使用js创建。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("Vue.component('g-button',{\n  template:`\n    <button>hi</button>`\n\n})\n")])])]),e("ol",[e("li",[n._v("书写button的样式，由于我们做的button 要通用最好不要将宽高这些写死，而是变成变量。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" --button-height: 32px;\n      --font-size: 14px;\n.g-button {\n      font-size: var(--font-size);\n      height: var(--button-height);\n          }\n")])])]),e("p",[n._v("安装parcel 打包工具，npm install -D parcel-bundler,-D的意思是开发者使用\n将button按钮组合起来。成为一个单文件组件，使得app.js成为入口\n2. 使用parcel 来运行我们的项目 具体位置在'./node_modules/.bin/parcel index.html\n页面不显示按钮，使用的vue 版本有问题，将package.json 文件添加一个")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('"alias": {\n \n   "vue":"./node_modules/vue/dist/vue.common.js"\n}\n')])])]),e("p",[n._v("然后再次运行 ./node_modules/.bin/parcel index.html --no-cache\nbutton 按钮的内容应该使用插槽，不能写死这个按钮。\n3.  引入svg 图标,设置一下icon样式，关于icon的名字应该有外部数据，使用props传入"),e("code",[n._v('<use :xlink:href="#i-${name}"></use>')]),n._v("\n4. 让用户可以自定义引入的icon图标到底是放在左边，还是右边，再来一个"),e("code",[n._v("propsprops:['name','iconPosition']")]),n._v("然后"),e("code",[n._v(':class="{[icon-${iconPosition}]:true}')]),n._v("通过css让图标的位置交换，flex布局中有一个叫做order的属性。\n5.  在vue中有一个功能叫做,验证器验证外部传值的正确性")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    iconPosition:{\n    type:String,\n    default:'left',\n    validator(value){\n   return value === 'left' || value === 'right'\n    }//可以让外部输入不对的情况下报错\n ```\n6.  用到icon的地方较多，将icon 封装成一个单独的vue组件,在app.js声明一下成为全局通用，名字外部传值。 \n7. 增加显示菊花状态，即加载中状态，采用动画声明一个动画\n@keyframes spin {\n0%{transform: rotate(0deg)}\n\n100%{transform:rotate(360deg);\n}}\n.loading{\n   animation: spin 1s infinite linear;\n }\n\n8. 给button 添加点击事件，当button 被点击时才会出现菊花状态\n")])])]),e("p",[n._v('<button class="g-button" :class="{['),e("code",[n._v("icon-${iconPosition}")]),n._v(']:true}" @click="$emit(\'click\')">\n'),n.loading?e("icon",{staticClass:"loading icon",attrs:{name:"load-5"}}):n._e(),n._v(" "),n.icon&&!n.loading?e("icon",{staticClass:" icon",attrs:{name:n.icon}}):n._e(),n._v('\n<g-button icon="setting" icon-position="left" :loading="loading3" @click="loading3=!loading3">\n按钮\n')],1),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("单元测试 npm i -D chai 然后开始书写单元测试,开始的时候就用简单的块隔开\nimport chai from 'chai'//npm install -D chai\nimport spies from 'chai-spies'//npm install -D chai-spies\nchai.use(spies)\nconst expect = chai.expect\n{\nconst div = document.createElement('div')\ndocument.body.appendChild(div)\nconst Constructor = Vue.extend(Button)\nconst vm = new Constructor({\n  propsData: {\n    icon: 'settings'\n  }\n})\nvm.$mount(div)\nlet svg = vm.$el.querySelector('svg')\nlet {order} = window.getComputedStyle(svg)\nexpect(order).to.eq('1')\nvm.$el.remove()\nvm.$destroy()\n}\n{\n  const Constructor = Vue.extend(Button)\n  const vm = new Constructor({\n    propsData: {\n      icon: 'settings',\n    }\n  })\n  vm.$mount()\n  let spy = chai.spy(function(){})//声明这个间谍函数\n  vm.$on('click', spy)\n  let button = vm.$el\n  button.click()\n  expect(spy).to.have.been.called()\n}\n\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);