(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{377:function(e,n,t){"use strict";t.r(n);var o=t(42),s=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"引入icon图标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入icon图标"}},[e._v("#")]),e._v(" 引入icon图标")]),e._v(" "),t("ul",[t("li",[e._v("当成图片方式来引入，缺点就是不能修改图标的颜色")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import x from 'icons/money.svg'\n<img src={x} alt/>\n")])])]),t("ul",[t("li",[e._v("React没有配置文件，但是为了使用Icon图标我们需要修改配置文件，把需要提交的文件提交一下，使用"),t("code",[e._v("npm run eject")]),e._v("命令将配置文件手动提出来。更改webpackcon.config.json配置文件，具体操作看"),t("code",[e._v("svg-sprite-loader")]),e._v(",找到webpackcon.config.json然后在里面找到约在350行加上 ,"),t("code",[e._v("npm install svg-sprite-loader -D,npm install svgo-loader -D")]),e._v(",")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("oneOf: [//350行\n          {\n            test: /\\.svg$/,\n            use: [\n              { loader: 'svg-sprite-loader', options: {  } },\n              {\n                loader: 'svgo-loader', options: {\n                  plugins: [\n                    {removeAttrs: {attrs: 'fill'}}\n                  ]\n                }\n              }\n            ]\n          },\n          使用方法\n           import x from 'icons/money.svg'\n           console.log(x)\n           <svg>\n           <use xlinkHref=\"#money\">\n           <svg>\n           \n")])])]),t("p",[e._v("如果并不使用console.log(x),发现图标消失了，原理和Tree Shaking有关，声明一个变量但是不使用，编译时直接删掉，为了解决bug，需要使用require来引入。")]),e._v(" "),t("p",[e._v("4.为了解决引入图标的麻烦与重复，创建Icon组件，将引入icon图标封装成一个组件，然后给组件使用。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react';\nlet importAll = (requireContext: __WebpackModuleApi.RequireContext) => requireContext.keys().forEach(requireContext);//\ntry {importAll(require.context('icons', true, /\\.svg$/));} catch (error) {console.log(error);}\ntype Props = {\n  name: string\n}\nconst Icon = (props: Props) => {\n  return (\n    <svg className=\"icon\">\n      <use xlinkHref={'#' + props.name}/>\n    </svg>\n  );\n};\n\nexport default Icon;\n")])])]),t("p",[e._v("运行时"),t("code",[e._v("__WebpackModuleApi")]),e._v("会报错，需要安装"),t("code",[e._v("npm install --dev @types/webpack-env@1.15.1")]),e._v(".")])])}),[],!1,null,null,null);n.default=s.exports}}]);