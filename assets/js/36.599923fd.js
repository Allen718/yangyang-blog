(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{402:function(e,t,n){"use strict";n.r(t);var a=n(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"数据持久化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据持久化"}},[e._v("#")]),e._v(" 数据持久化")]),e._v(" "),n("p",[e._v("数据持久化,就是将我们的数据保存下来，适当的时机保存，适当的时机去拿。不要每次刷新页面以后我的新增标签就消失了")]),e._v(" "),n("ol",[n("li",[e._v("将新增标签这个api封装进入useTag.tsx文件里面。")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("   const addTag = () => {\n       const tagName = window.prompt('新标签的名称为');\n    if (tagName !== null && tagName !== '') {\n      setTags([...tags, {id: createId(), name: tagName}]);\n    }\n  };\n  return {tags, addTag, setTags, findTag, updateTag, findTagIndex, deleteTag};\n};\n")])])]),n("p",[e._v("2.使用useEffect函数，作为钩子函数去保存和获取tags")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const [tags, setTags] = useState<{ id: number; name: string }[]>([]);\n useEffect(() => {\n   let localTags = JSON.parse(window.localStorage.getItem('tags') || '[]');\n    if (localTags.length === 0) {\n      localTags = [\n        {id: createId(), name: '衣'},\n        {id: createId(), name: '食'},\n        {id: createId(), name: '住'},\n        {id: createId(), name: '行'},\n      ];\n    }\n    setTags(localTags);\n\n  }, []); // 组件挂载时执行\n")])])]),n("p",[e._v("3.我们使用useEffect对tags这个数据进行监听，当它变化时我们就保存tags,但是会出现bug, 当tags从无到有的这个过程的时候，我们并不希望保存，因为保存的就是一个空数组，违背本意，所以需要处理一下，从无到有的这个过程并不监听。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import {useEffect, useRef} from 'react';\nexport const useUpdate = (fn: () => void, deps: any[]) => {\nconst count = useRef(0);\nuseEffect(() => {\n  count.current += 1;\n});\nuseEffect(() => {\n  if (count.current > 1) {\n    fn();\n  }\n}, deps); // 不可变数据\n};\nuseUpdate(() => {\n  window.localStorage.setItem('tags', JSON.stringify(tags));\n}, [tags]);\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[e._v("修改id生成出现的问题")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let id = parseInt(window.localStorage.getItem('idMax') || '0');\nconst createId = ():number => {\nid += 1;\nwindow.localStorage.setItem('idMax', JSON.stringify(id))\nreturn id;\n};\nuseEffect(() => {\n  let localTags = JSON.parse(window.localStorage.getItem('tags') || '[]');\n  if (localTags.length === 0) {\n    localTags = [\n      {id: createId(), name: '衣'},\n      {id: createId(), name: '食'},\n      {id: createId(), name: '住'},\n      {id: createId(), name: '行'},\n    ];\n  }\n  setTags(localTags);\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[e._v("记账页面的记账数据的持久化\n新建一个useRecord.tsx文件夹，用来管理记账页面的关于记一次账的数据")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import {useEffect, useState} from 'react';\nimport {useUpdate} from './useUpdate';\ntype RecordItem = {\n tagIds: number[]\n note: string\n category: '+' | '-'\n amount: number\n createdAt: string // ISO 8601\n}\ntype newRecordItem = Omit<RecordItem, createdAt>\nexport const useRecords = () => {\n const [records, setRecords] = useState<RecordItem[]>([]);\n useEffect(() => {\n   setRecords(JSON.parse(window.localStorage.getItem('records') || '[]'));\n }, []);\n useUpdate(() => {\n   window.localStorage.setItem('records', JSON.stringify(records));\n }, [records]);\n const addRecord = (newRecord: newRecordItem) => {\n   const record = {...newRecord, createdAt: (new Date()).toISOString()};\n   setRecords([...records, record]);\n };\n return {records, addRecord};\n};\n应用\nconst defaultFormData = {\n tagIds: [] as number[],\n note: '',\n category: '-' as Category,\n amount: 0\n};\nconst [selected, setSelected] = useState(defaultFormData);\n const {records, addRecord} = useRecords();\n const onChange = (obj: Partial) => {\n   setSelected({...selected, ...obj});\n };\n const submit = () => {\n   addRecord(selected);\n   alert('保存成功');\n   setSelected(defaultFormData);\n };\n 6. 发现一个bug，在记账页面没法输入点的bug，原来是因为，我们在收集这个record的时候，声明的amount的数据类型是number,当数据变化的时候立马收集会存在问题，我们需要在数字NumberPad.tsx做一些变化·\n")])])]),n("p",[e._v("const [output, _setOutput] = useState(props.value.toString());\nconst setOutput = (output: string) => {\nlet value;\nlet newOutput: string;\nif (output.length > 16) {\nnewOutput = output.slice(0, 16);\n} else if (output.length === 0) {\nnewOutput = '0';\n} else {\nnewOutput = output;\n}\n_setOutput(newOutput);\nprops.onChange(parseFloat(newOutput));\n};\nconst onClickButtonWrapper = (e: React.MouseEvent) => {\nconst text = (e.target as HTMLButtonElement).textContent;")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);