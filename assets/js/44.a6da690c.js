(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{364:function(s,e,t){"use strict";t.r(e);var a=t(42),o=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"项目搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目搭建"}},[s._v("#")]),s._v(" 项目搭建")]),s._v(" "),t("ol",[t("li",[s._v("安装，全局安装"),t("code",[s._v("npm i -g create-react-app@3.4.1")]),s._v(",然后使用命令"),t("code",[s._v("create-react-app xxx -template typescript")]),s._v(" 然后使用"),t("code",[s._v("npm start")]),s._v("就会自动开启一个端口进入浏览器，如果不喜欢自动进入浏览器那么就运行"),t("code",[s._v("echo 'BROWSER=none' > .env")]),s._v("。")]),s._v(" "),t("li",[s._v("使用webstrom编辑器的在项目目录下新建一个.gitignore文件，将.idea放进去，如果是vscode的话就是.vscode.")]),s._v(" "),t("li",[s._v("文件目录结构预览，入口文件是index.tsx,然后主组件就是App.tsx,tsconfig.json是ts配置文件。")]),s._v(" "),t("li",[s._v("在index.scss里面引入"),t("code",[s._v("@import-normalize;")]),s._v("主要是为了是得默认样式在各个浏览器渲染出来的效果一致，关于css reset 就是一些基本设置，去掉一些默认效果，比如a标签的下划线，全局的盒模型这些。")]),s._v(" "),t("li",[s._v("在项目里面引入文件直接，在vue项目中我们@代表的src,但是在react项目中不需要，我们直接使用@import 'xxx/yyy'就代表着是引入'src/xxx/yyy',不过需要一点小配置，首先将src-右键-mark directory-resource root,tsconfig.json中添加"),t("code",[s._v('"compilerOptions": { "baseUrl": "src",}')])]),s._v(" "),t("li",[s._v("如果想让react应用支持sass,首先我们可以下载node-sass,但是它下载速度慢，很容易就是失败了，然后node-sass本地的编译速度也很慢，所以上网搜索了一下，dart-sass相比较node-sass会更加好，但是React只支持node-sass,并不支持dart-sass,难道就放弃了，通过多方收索。我们发现，npm 6.9支持一个新功能叫做package alias,我们可以在node-sass的目录下安装dart-sass,实现偷梁换柱的功能"),t("code",[s._v("npm install node-sass@npm:dart-sass")])]),s._v(" "),t("li",[s._v("本项目不打算使用css也不打算使用scss,我们打算使用css in js,在js文件里面写css,"),t("code",[s._v("npm install --save styled-components")]),s._v(","),t("code",[s._v("npm install --save @types/styled-components")]),s._v("\n在webstrom 编辑器里面安装插件 styled components &styled tsx,主要是为了看见css 颜色。")]),s._v(" "),t("li",[s._v("在src目录下新建一个叫做helper.scss 和一个 index.scss,分别用来存放变量和初始化样式。")])])])}),[],!1,null,null,null);e.default=o.exports}}]);