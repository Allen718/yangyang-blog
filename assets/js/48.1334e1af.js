(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{359:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"记账数据的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记账数据的管理"}},[e._v("#")]),e._v(" 记账数据的管理")]),e._v(" "),a("p",[e._v("src目录下新建一个models目录，创建model.ts文件，将我们在记账页面收集到的数据进行增删改查管理")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const localStorageKeyName = 'recordList';\nconst model = {\n  clone(data: RecordItem[] | RecordItem) {\n    return JSON.parse(JSON.stringify(data));\n  },\n  fetch() {\n    return JSON.parse(window.localStorage.getItem(localStorageKeyName) || '[]') as RecordItem[];\n  },\n  save(data: RecordItem[]) {\n    window.localStorage.setItem(localStorageKeyName, JSON.stringify(data));\n  }\n};\n\nexport default model; \n")])])]),a("p",[e._v("然后记账页面就用model暴露出来的api对数据进行操作,")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import model from '@/model'\nconst recordList = model.fetch();\n saveRecord() {\n      const record2: RecordItem = model.clone(this.record);\n      record2.createdAt = new Date();\n      this.recordList.push(record2);\n    }\n    @Watch('recordList')\n    onRecordListChange() {\n      model.save(this.recordList);\n    }\n")])])]),a("h2",{attrs:{id:"标签数据管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签数据管理"}},[e._v("#")]),e._v(" 标签数据管理")]),e._v(" "),a("p",[e._v("对新增标签过程也做一个数据管理，models目录，创建tagListModel.ts文件夹")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  const localStorageKeyName = 'tagList';\n  type TagListModel = {\n  data: string[]\n  fetch: () => string[]\n  create: (name: string) => 'success' | 'duplicated' // 联合类型\n  save: () => void\n  }\n const tagListModel: TagListModel = {\n  data: [],\n  fetch() {\n    this.data = JSON.parse(window.localStorage.getItem(localStorageKeyName) || '[]');\n    return this.data;\n  },\n  create(name) {\n    if (this.data.indexOf(name) >= 0) {return 'duplicated';}\n    this.data.push(name);\n    this.save();\n    return 'success';\n  },\n  save() {\n    window.localStorage.setItem(localStorageKeyName, JSON.stringify(this.data));\n  }\n  }  ;\nexport default tagListModel;\n")])])]),a("h2",{attrs:{id:"错误提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误提示"}},[e._v("#")]),e._v(" 错误提示")]),e._v(" "),a("p",[e._v("关于创建标签，函数"),a("code",[e._v("create: (name: string) => 'success' | 'duplicated'")]),e._v("的一些思考。如果返回值是boolean,true表示成功，false表示失败，或者"),a("code",[e._v("throw new Error('duplicated')")]),e._v(" "),a("code",[e._v("try{}.catch(error){console.log(error.message)}")]),e._v(",或者返回数字，成功返回0，失败返回非零，返回对象"),a("code",[e._v("{code:number,message:string}")]),e._v(",也可以是上面的联合类型。")])])}),[],!1,null,null,null);t.default=r.exports}}]);